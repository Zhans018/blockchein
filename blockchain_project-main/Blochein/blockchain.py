import time
from block import Block

class Blockchain:
    def __init__(self):
        self.chain = [self.create_genesis_block()]

    def create_genesis_block(self):
        """ –ì–µ–Ω–µ–∑–∏—Å –±–ª–æ–≥—ã–Ω –∂–∞—Å–∞–π–¥—ã (–±–ª–æ–∫—á–µ–π–Ω–Ω—ñ“£ –±—ñ—Ä—ñ–Ω—à—ñ –±–ª–æ–≥—ã) """
        return Block(time.time(), ["Genesis Block"], "0")

    def add_block(self, data):
        previous_hash = self.chain[-1].hash if self.chain else "0"
        timestamp = time.time()  # üî• –£–∞“õ—ã—Ç –±–µ–ª–≥—ñ—Å—ñ–Ω “õ–æ—Å–∞–º—ã–∑!
    
        block = Block(data=data, previous_hash=previous_hash, timestamp=timestamp)
        self.chain.append(block)
        return block

    def is_chain_valid(self):
        """ –ë–ª–æ–∫—á–µ–π–Ω–Ω—ñ“£ –∂–∞—Ä–∞–º–¥—ã–ª—ã“ì—ã–Ω —Ç–µ–∫—Å–µ—Ä–µ–¥—ñ """
        for i in range(1, len(self.chain)):
            current = self.chain[i]
            previous = self.chain[i - 1]

            if current.hash != current.calculate_hash():
                print(f"‚ö†Ô∏è “ö–∞—Ç–µ: {i}-–±–ª–æ–∫—Ç—ã“£ —Ö—ç—à—ñ –¥“±—Ä—ã—Å –µ–º–µ—Å!")
                return False

            if current.previous_hash != previous.hash:
                print(f"‚ö†Ô∏è “ö–∞—Ç–µ: {i}-–±–ª–æ–∫—Ç—ã“£ –∞–ª–¥—ã“£“ì—ã —Ö—ç—à—ñ —Å”ô–π–∫–µ—Å –∫–µ–ª–º–µ–π–¥—ñ!")
                return False

        print("‚úÖ –ë–ª–æ–∫—á–µ–π–Ω –∂–∞—Ä–∞–º–¥—ã!")
        return True
